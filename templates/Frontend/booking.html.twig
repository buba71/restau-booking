{% extends 'base.html.twig' %}

{% block stylesheets%}
    {{ parent() }}    
{% endblock %}

{% block body %}
<div class="text-center mt-5 text-muted">
  <h1>Réserver</h1>
</div>

<div class="row mt-5 booking-container">
    <section class="card booking-details col-sm-12 col-lg-7">
      <div class="">
        <div class="card restaurant-infos" style="width: 100%;">
            <div class="row g-0">
                <div class="col-md-6">
                  <img src="{{ asset('/images/restaurant.png') }}" class="img-fluid" alt="image-restaurant">
                </div>
                <div class="col-md-6 restaurant-infos">
                  <div class="card-body">
                    <h5 class="card-title">{{ restaurant.name }}</h5>
                    <p class="card-text">{{ restaurant.address}}</p>
                    <p class="card-text">{{ restaurant.zipcode}} {{ restaurant.city }}</p>
                    <p class="card-text"><em>{{ restaurant.speciality}}</em></p>
                    <p class="card-text">Téléphone: {{ restaurant.phone}}</p>                                
                  </div>                  
                </div>                
            </div>
        </div>  

        <div class="booking-form d-flex justify-content-center">
          <div class="mt-5">
            <label for="person-number">Nombre de personnes</label>
            <select name="person-number" class="custom-select" id="person-number">
              <option value="1">1</option>
              <option value="2">2</option>
              <option value="3">3</option>
              <option value="4">4</option>
              <option value="5">5</option>
              <option value="6">6</option>
            </select>
          </div>
          <!--
          <div class="mt-5">
            <label for="lunch-choice" class="">Déjeuner</label>
            <input type="checkbox" name="lunch" class="mr-5" id="lunch-choice">
            <label for="diner-choice" class="">Dîner</label>
            <input type="checkbox" name="diner" class="" id="diner-choice">                
          </div> 
          -->            
          <div class="booking-controls mb-5 justify-content-center">
            <button class="btn btn-info mr-3">Réserver sans commande</button>
            <button class="btn btn-info">Réserver avec commande</button> 
          </div>  
        </div>                                     
      </div>
    </section>

    <section class=" col-sm-12 col-lg-5 booking-schedule">
        <div class="card">
          <div id="picker">
          </div>
          <div class="text-center">
            <div id="myc-time-up">
              <i class="fa fa-chevron-up fa-lg m-2"></i>
            </div>
            <div id="myc-time-down">
              <i class="fa fa-chevron-down fa-lg m-2"></i>
            </div>           
          </div>
        </div>
    </section>
</div>

{% endblock %}

{% block javascripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.slim.min.js"></script>
<!-- calendar library picker -->
<script src="{{ asset("js/mark-your-calendar.js") }}"></script>

<script>

/* 
* Time slot navigation up and down.
*/

 const timeUpScroll = document.getElementById('myc-time-up');
 const timeDownScroll = document.getElementById('myc-time-down');
 
 timeUpScroll.onclick = function () {
   const height = document.getElementById('myc-available-time-container').scrollTop -= 150;
   console.log(height)
 }
 
 timeDownScroll.onclick = function () {
   const height = document.getElementById('myc-available-time-container').scrollTop += 150;
   console.log(height)
 }

 /*
 * Time slot navigation up and down.
 */


// Calendar initialisation.
const months = ['janvier', 'fevrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'aout', 'septembre', 'octobre', 'novembre', 'decembre'];

function convertMonthsToEnglish (frenchMonth) {
  let month;
  switch (frenchMonth) {
    case "janvier":
      month = "january";
      break;
    case "fevrier":
      month = "february";
      break;
    case "mars":      
      month = "march";
      break;
    case "avril":
      month = "april";
      break;
    case 'mai':
      month = 'may';
      break;
    case 'juin':
      month = 'june';
      break;
    case 'juillet':
      month = 'july';
      break;
    case 'aout':
      month = 'august';
      break;
    case 'septembre':
      month = 'september';
      break;
    case 'octobre':
      month = 'october';
      break;
    case 'novembre':
      month = 'november';
      break;
    case 'decembre':
      month = 'december';
      break;
    default:
      month = 'rien';
  }
  return month;
}

const weekdays = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'];

const prevHtml = `
            <div id="myc-prev-week">
                <i class="fa fa-chevron-left"></i>
            </div>
        `;

const nextHtml = `
            <div id="myc-next-week">
                <i class="fa fa-chevron-right"></i>
            </div>
        `;

const startDate = new Date();

// Make calendar sync with backend data.
const calendar = () => {
  fetch('{{ path('timeSlots') }}', {
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
    },
    method: 'POST',
    body: JSON.stringify(startDate)
  })
  .then((response) => response.json())
  .then((data) => {

    

    $('#picker').markyourcalendar({
    startDate: startDate,
    availability: data,
    isMultiple: false,
    months: months,
    prevHtml: prevHtml,
    nextHtml: nextHtml,
    weekdays: weekdays,
    onClickNavigator: function(ev, instance) {
      
      const daysNumberHeader = document.querySelectorAll('.myc-date-number');
      const daysNameHeader = document.querySelectorAll('.myc-date-display');
      const daysName = [];
      const daysNumber = [];

      daysNameHeader.forEach(element => {
        daysName.push(element.innerHTML);
      });

      daysNumberHeader.forEach(element => {
        daysNumber.push(element.innerHTML);
      });

      const monthAndYear = document.getElementById('myc-current-month-year-container').innerHTML;
      const year = (monthAndYear.trim()).match(/\d+/g).toString();
      const frenchMonth = (monthAndYear.trim()).match(/([a-zA-Z ])/g).join("");      
      const englishMonth = convertMonthsToEnglish(frenchMonth.trim());

      const navigateStartDate = new Date(englishMonth + ' ' + daysNumber[0] + ',' + year);
      
      const timeSlot = [];        

      setTimeSlots(instance);

      // On click next or prev, make ajax call to fetch time Slots from backend and set calendar with it.
      function setTimeSlots (instance) {
          fetch('{{ path('timeSlots') }}', {
            headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
            },
            method: 'POST',
            body: JSON.stringify(navigateStartDate)
          })
          .then((response) => response.json())
          .then((data) => {
            instance.setAvailability(data);

            // Calendar is loaded => get timeSlots for applying style.
            const times = document.querySelectorAll('.myc-available-time');
            const today = new Date();
            Array.from(times).forEach(element => {
              const date = element.getAttribute('data-date');
              const dateTime = element.getAttribute('data-time');
              if (today.getTime() > new Date(date + 'T' + dateTime)) {
                element.classList.remove("myc-available-time");
                element.classList.add("myc-disabled-time");
              }

            });
            
          })
          .catch(error => console.log(error));
      } 
    }

    });

    // Calendar is loaded => get timeSlots for applying style.
    const times = document.querySelectorAll('.myc-available-time');
    const today = new Date();
    Array.from(times).forEach(element => {
      const date = element.getAttribute('data-date');
      const dateTime = element.getAttribute('data-time');
      
      if (today.getTime() > new Date(date + 'T' + dateTime)) {
        
        element.classList.remove("myc-available-time");
        element.classList.add("myc-disabled-time");
      }      
    });

  })
  .catch(error => console.log(error));  
}

calendar()

</script>
{% endblock %}